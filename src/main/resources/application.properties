

# 개발용 포트번호
server.port=9090

# 프로젝트, 배포하는 파일명
server.servlet.context-path=/TEAMMOVIE



# view에 해당하는 html의 위치
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


# h2 db (개발용 DB)
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:file:D:/Movie_db/db01;Mode=Oracle;AUTO_RECONNECT=TRUE
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect



# oracle (서비스용 DB)
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@1.234.5.158:11521/xe
# spring.datasource.username=ds200
# spring.datasource.password=pw200

# h2 또는 oracle 세션 사용
# server.servlet.session.timeout=3600
# spring.session.store-type=jdbc
# spring.session.jdbc.initialize-schema=always


# db컨넥션 유지
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=500
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=20
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=60000

# entity에 정의된 DDL
# create : 서버구동시 테이블 생성, 재 구동시 또 생성, 데이터 초기화
# create-drop  : 삭제되는 시점이 서버 종료시
# update : DDL에 변화가 생길때만 생성, 데이터는 유지
# validate : 엔티티와 테이블 정상 매핑 ( 타입, 컬럼명이 정확한지 ) 만 확인
spring.jpa.hibernate.ddl-auto=update
# 소스코드 자동감지 후 재시작
spring.devtools.livereload.enabled=true


# redis 세션 사용
# 세션은 한개만 사용하기 type 2개면 안됨
spring.redis.host=1.234.5.158
spring.redis.port=16379
spring.redis.password=ds606
spring.redis.database=18
server.servlet.session.timeout=3600
spring.session.store-type=redis
spring.session.redis.flush-mode=immediate